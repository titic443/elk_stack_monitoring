input {
  #  beats{
  #   port => 5044
  #   add_field => { "source" => "beat" }
  #  }
  rabbitmq {
    host => "35.240.221.226"
    port => 5672 
    queue => "error_alert"  
    user => "mikelopster" 
    password => "password" 
    prefetch_count => 10 
    ack => true  
    durable => "true"
    codec => "json"
    add_field => { "queue" => "error_alert" }
  }
  rabbitmq {
    host => "35.240.221.226"
    port => 5672 
    queue => "connection_logs"  
    user => "mikelopster" 
    password => "password" 
    prefetch_count => 10 
    ack => true  
    durable => "true"
    codec => "json"
    add_field => { "queue" => "connection_logs" }
  }
  # file {
  #   mode => "tail"
  #   path => "/usr/share/logstash/ingest_data/*-json.log"
  #   codec => "json"
  #   add_field => { "queue" => "error_alert" }
  # }
}

filter {
  # json {
  # source => "message"
  # add_field => { "parsed" => "true" } 
  # remove_field => ["message"]
  # }
  if [queue] == "error_alert" {
    if ![NameService] {
      mutate {
        add_field => { "NameService" => "unknown" }
      }
    }
  } else if [queue] == "connection_logs" {
    if ![NameService] {
      mutate {
        add_field => { "NameService" => "unknown" }
      }
    }
  }
  # if [source] == "rabbitmq" {
  #   if [queue] == "error_alert" {
  #     mutate {
  #       add_field => { "queue" => "error_alert" }
  #     }
  #     if ![NameService] {
  #       mutate {
  #         add_field => { "NameService" => "unknown" }
  #       }
  #     }  
  #   } else if [queue] == "connection_logs" {
  #     mutate {
  #       add_field => { "queue" => "connection_logs" }
  #     }
  #     if ![NameService] {
  #       mutate {
  #         add_field => { "NameService" => "unknown" }
  #       }
  #     }  
  #   }
  # }
  # if [source] == "file" {
  #   json {
  #     source => "message"  # Parse the message field as JSON
  #     remove_field => ["message"]
  #   }
  # }

  # if [@metadata][beat] {
  #   if [@metadata][beat] == "filebeat" {
  # }
}

output {  
  if [queue] == "error_alert" {
    elasticsearch {
      hosts=> "${ELASTIC_HOSTS}"
      user=> "${ELASTIC_USER}"
      password=> "${ELASTIC_PASSWORD}"
      cacert=> "certs/ca/ca.crt"
      index => "error_alert_%{NameService}%{+YYYY.MM.DD}"
    }
  } else if [queue] == "connection_logs" {
    elasticsearch {
      hosts=> "${ELASTIC_HOSTS}"
      user=> "${ELASTIC_USER}"
      password=> "${ELASTIC_PASSWORD}"
      cacert=> "certs/ca/ca.crt"
      index => "connections_%{NameService}_%{+YYYY.MM.DD}"
    }
  } else if [NameService] == "unknown" {
    elasticsearch {
      hosts=> "${ELASTIC_HOSTS}"
      user=> "${ELASTIC_USER}"
      password=> "${ELASTIC_PASSWORD}"
      cacert=> "certs/ca/ca.crt"
      index => "rabbit_unknown%{+YYYY.MM.DD}"
    }
  } else {
    elasticsearch {
      hosts=> "${ELASTIC_HOSTS}"
      user=> "${ELASTIC_USER}"
      password=> "${ELASTIC_PASSWORD}"
      cacert=> "certs/ca/ca.crt"
      index => "logsfile-%{+YYYY.MM.dd}"
    }    
  }
  stdout {
    codec => "rubydebug"  # Useful for debugging and inspecting data
  }
}
